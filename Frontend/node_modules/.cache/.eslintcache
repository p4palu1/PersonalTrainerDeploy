[{"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\index.js":"1","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\App.js":"2","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Header.js":"4","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Footer.js":"6","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Banner.js":"7","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Info.js":"8","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\workouts.js":"9","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Workout.js":"10","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutScreen.js":"11","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\store.js":"12","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\reducers\\workoutReducers.js":"13","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\actions\\workoutActions.js":"14","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Loader.js":"15","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Message.js":"16","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\reducers\\adminReducers.js":"17","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\LoginScreen.js":"18","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\FormContainer.js":"19","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\actions\\adminActions.js":"20","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\ProfileScreen.js":"21","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutSignForScreen.js":"22","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutUpdateScreen.js":"23","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutListScreen.js":"24","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutsAvailableScreen.js":"25","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\HeroSection.js":"26","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\DataSection.js":"27","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\CalendarScreen.js":"28","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\WorkoutAdmin.js":"29","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutCreateScreen.js":"30","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Introduction.js":"31","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\SearchBox.js":"32"},{"size":651,"mtime":1631015022396,"results":"33","hashOfConfig":"34"},{"size":1729,"mtime":1632754428534,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":2893,"mtime":1631479898420,"results":"37","hashOfConfig":"34"},{"size":493,"mtime":1631477479679,"results":"38","hashOfConfig":"34"},{"size":432,"mtime":1630071456933,"results":"39","hashOfConfig":"34"},{"size":1716,"mtime":1630072648688,"results":"40","hashOfConfig":"34"},{"size":252,"mtime":1630072384403,"results":"41","hashOfConfig":"34"},{"size":1562,"mtime":1630156707191,"results":"42","hashOfConfig":"34"},{"size":2895,"mtime":1631359124411,"results":"43","hashOfConfig":"34"},{"size":3499,"mtime":1631360171238,"results":"44","hashOfConfig":"34"},{"size":1394,"mtime":1631395007432,"results":"45","hashOfConfig":"34"},{"size":2583,"mtime":1631394983202,"results":"46","hashOfConfig":"34"},{"size":4814,"mtime":1631480876285,"results":"47","hashOfConfig":"34"},{"size":282,"mtime":1630565173189,"results":"48","hashOfConfig":"34"},{"size":297,"mtime":1630565505668,"results":"49","hashOfConfig":"34"},{"size":1249,"mtime":1630923488913,"results":"50","hashOfConfig":"34"},{"size":2668,"mtime":1630922958443,"results":"51","hashOfConfig":"34"},{"size":395,"mtime":1630855583660,"results":"52","hashOfConfig":"34"},{"size":3046,"mtime":1630925171547,"results":"53","hashOfConfig":"34"},{"size":3927,"mtime":1630931221574,"results":"54","hashOfConfig":"34"},{"size":3761,"mtime":1631177567055,"results":"55","hashOfConfig":"34"},{"size":5919,"mtime":1631392027833,"results":"56","hashOfConfig":"34"},{"size":3505,"mtime":1631396008730,"results":"57","hashOfConfig":"34"},{"size":1349,"mtime":1631481045443,"results":"58","hashOfConfig":"34"},{"size":660,"mtime":1631179457858,"results":"59","hashOfConfig":"34"},{"size":2718,"mtime":1631475322113,"results":"60","hashOfConfig":"34"},{"size":2195,"mtime":1631390238050,"results":"61","hashOfConfig":"34"},{"size":2856,"mtime":1631357097096,"results":"62","hashOfConfig":"34"},{"size":6025,"mtime":1631390934292,"results":"63","hashOfConfig":"34"},{"size":555,"mtime":1631477731379,"results":"64","hashOfConfig":"34"},{"size":868,"mtime":1631564071408,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l1plh0",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\index.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\App.js",["147"],"import './App.css';\nimport Footer from \"./components/Footer\"\nimport Header from \"./components/Header\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from \"react-bootstrap\"\nimport HomeScreen from \"./screens/HomeScreen\"\nimport WorkoutScreen from \"./screens/WorkoutScreen\"\nimport WorkoutSignForScreen from \"./screens/WorkoutSignForScreen\"\nimport LoginScreen from \"./screens/LoginScreen\"\nimport ProfileScreen from \"./screens/ProfileScreen\"\nimport WorkoutUpdateScreen from \"./screens/WorkoutUpdateScreen\"\nimport WorkoutCreateScreen from \"./screens/WorkoutCreateScreen\"\nimport WorkoutListScreen from \"./screens/WorkoutListScreen\"\nimport WorkoutsAvalableScreen from \"./screens/WorkoutsAvailableScreen\"\nimport CalendarScreen from \"./screens/CalendarScreen\"\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n          <Route path=\"/workouts/sign/:id\" component={WorkoutSignForScreen} exact/>\n          <Route path=\"/workouts/update/:id\" component={WorkoutUpdateScreen} exact/>\n          <Route path=\"/workouts/create\" component={WorkoutCreateScreen} exact/>\n          <Route path=\"/admin/workouts\" component={WorkoutListScreen} exact />\n          <Route path=\"/workouts/:id\" component={WorkoutScreen} exact />\n          <Route path=\"/schedule\" component={CalendarScreen} exact />\n          <Route path=\"/workouts\" component={WorkoutsAvalableScreen} exact />\n          <Route path=\"/search/:keyword\" component={WorkoutsAvalableScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/login\" component={LoginScreen} exact />\n          <Route path=\"/\" component={HomeScreen} exact />\n\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Header.js",["148","149","150"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from \"../actions/adminActions\"\r\nimport { withRouter } from 'react-router-dom'; \r\nimport { Route } from \"react-router-dom\"\r\nimport SearchBox from \"./SearchBox\"\r\n\r\n\r\nconst Header = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const adminLogin = useSelector((state) => state.adminLogin)\r\n    const { adminInfo } = adminLogin\r\n\r\n\r\n    const logoutHandler = () => {\r\n            dispatch(logout())\r\n            history.push('/login')\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\"  variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                \r\n                    <Container>\r\n                        <Navbar.Brand href=\"/\">PersonalTrainer</Navbar.Brand>\r\n                        <Route render={({history}) => <SearchBox history={history}/>} />\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse className=\"ms-auto\" id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ms-auto\">\r\n                            { adminInfo \r\n                            ? (\r\n                                <>\r\n                                    <Nav.Link href=\"/profile\">\r\n                                        <i className=\"\"></i> \r\n                                        <span>Profile</span>\r\n                                    </Nav.Link>\r\n                                    <Nav.Link href=\"/schedule\">\r\n                                        <i className=\"\"></i> \r\n                                        <span>Schedule</span>\r\n                                    </Nav.Link>\r\n                                    <Nav.Link href=\"/admin/workouts\">\r\n                                        <i className=\"\"></i> \r\n                                        <span>Workouts</span>\r\n                                    </Nav.Link>\r\n                                    <Nav.Link href=\"\" onClick={logoutHandler}>\r\n                                        <i className=\"\"></i> \r\n                                        <span>Log Out</span>\r\n                                    </Nav.Link>\r\n                                </>\r\n                            )\r\n                            : (\r\n                                <Nav.Link href=\"/login\">\r\n                                    <i className=\"\"></i> \r\n                                    <span>Admin Login</span>\r\n                                </Nav.Link>\r\n                            )\r\n                        }       \r\n                        </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                \r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\HomeScreen.js",["151","152"],"import React, { useState, useEffect } from 'react'\r\nimport HeroSection from \"../components/HeroSection\"\r\nimport DataSection from \"../components/DataSection\"\r\nimport Introduction from \"../components/Introduction\"\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n\r\n    return (\r\n        (\r\n            <>\r\n            <HeroSection />\r\n            <Introduction />\r\n            <br />\r\n            <br />\r\n            <DataSection />\r\n            </>\r\n    ))\r\n                }\r\n\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Footer.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Banner.js",["153","154","155"],"import React from 'react'\r\nimport { Carousel, Image, Button } from \"react-bootstrap\"\r\nimport p1 from \"../photos/p1.jpg\"\r\nimport p2 from \"../photos/p2.jpg\"\r\nimport p3 from \"../photos/p3.jpg\"\r\nimport p4 from \"../photos/p4.jpg\"\r\nimport p5 from \"../photos/p5.jpg\"\r\n\r\nconst Banner = () => {\r\n\r\n    return (\r\n        <div>\r\n            \r\n                <Carousel style={{ height: '600px'}} pause=\"hover\" variant=\"dark\" fade>\r\n                <Carousel.Item>\r\n                    <Image\r\n                    className=\"cimage d-block w-100 \"\r\n                    src={p4}\r\n                    alt=\"Second slide\"\r\n                    style={{filter: 'brightness(50%)'}}\r\n                    fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h2>Become the best version of yourself with PersonalTrainer</h2>\r\n                        <Button type=\"button\" variant=\"success\" className=\"btn btn-block mt-5\">Sign up for a lesson</Button>\r\n\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <Image\r\n                    className=\"d-block w-100\"\r\n                    src={p5}\r\n                    alt=\"Second slide\"\r\n                    style={{filter: 'brightness(50%)'}}\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h2>Become the best version of yourself with PersonalTrainer</h2>\r\n                        <Button variant=\"success\" className=\"btn btn-block mt-5\">Sign up for a lesson</Button>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n",["156","157"],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Info.js",["158","159","160","161"],"import React from 'react'\r\nimport { Row, Col, Image, Container } from \"react-bootstrap\"\r\nimport img from \"../photos/i.png\" \r\nconst Info = () => {\r\n    return (\r\n        <Container>\r\n            hey\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Info","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\workouts.js",[],["162","163"],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Workout.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutScreen.js",["164","165","166","167","168"],"import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport { Container, Card, Row, Col, Table, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { singleWorkout } from '../actions/workoutActions'\r\nimport Loader from \"../components/Loader\"\r\n\r\n\r\nconst WorkoutScreen = ({match}) => {\r\n\r\n    const dispatch  = useDispatch()\r\n\r\n    \r\n    \r\n    const workoutSingle = useSelector((state) => state.workoutSingle)\r\n    const { loading, error, workout} = workoutSingle\r\n\r\n    useEffect(() => {\r\n        dispatch(singleWorkout(match.params.id))\r\n    }, [match])\r\n\r\n    return (\r\n        <>\r\n            { workout\r\n            ?   (\r\n                <>\r\n                    \r\n                <Row className=\"mt-5\">\r\n                    <h1>{workout.description}</h1>\r\n                    <Col md={6}>\r\n                        {error && <div>{error}</div>}\r\n                        {loading && <Loader />}\r\n                        <h3>\r\n                            On {workout.date && `${workout.date.substring(8,10)}.${workout.date.substring(5,7)}, ${workout.date.substring(11,16)} `}\r\n                        </h3>\r\n                        <div>\r\n                            {`Price: ${workout.revenuePerClient} shekels`}\r\n                        </div>\r\n                        <div>\r\n                            Duration: {\r\n                            workout.duration > 1 \r\n                            ? `${workout.duration} hours` \r\n                            : `${workout.duration} hour` \r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <div>Equipment: {workout.equipment}</div>\r\n                        <div>\r\n                            Total Revenue: {workout.totalRevenue}\r\n                        </div>\r\n                        <div>\r\n                            Current Clients Amount: {workout.currentClients}\r\n                        </div>\r\n                        <div>\r\n                            Max Amount Of Clients: {workout.maxClients}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-5\">\r\n                    <h1>Clients</h1>\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>ID</td>\r\n                            <td>NAME</td>\r\n                            <td>EMAIL</td>\r\n                            <td>PHONE NUMBER</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {workout.clients.map(client => <tr key={client._id}>\r\n                            <td>{client._id}</td>\r\n                            <td>{client.name}</td>\r\n                            <td>{client.email}</td>\r\n                            <td>\r\n                                {client.phoneNumber}\r\n                            </td>\r\n                            <td>\r\n                                <Button>Edit</Button>\r\n                            </td>\r\n                        </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n                    \r\n                </Row>\r\n                </>\r\n\r\n                )\r\n            : (<div></div>)\r\n            }   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkoutScreen\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\store.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\reducers\\workoutReducers.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\actions\\workoutActions.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Loader.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Message.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\reducers\\adminReducers.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\actions\\adminActions.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\ProfileScreen.js",["169","170","171","172","173"],"import React, { useState, useEffect } from 'react'\r\nimport { getAdminDetails } from \"../actions/adminActions\"\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport { updateAdminProfile } from \"../actions/adminActions\"\r\n\r\nconst ProfileScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const adminLogin = useSelector((state) => state.adminLogin)\r\n    const { adminInfo } = adminLogin\r\n\r\n    const adminUpdate = useSelector((state) => state.adminUpdate)\r\n    const { error, success } = adminUpdate\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if(adminInfo){\r\n            setName(adminInfo.name)\r\n            setEmail(adminInfo.email)\r\n            setPhoneNumber(adminInfo.phoneNumber)\r\n        } else{\r\n            history.push(\"/login\")\r\n        }\r\n    }, [])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage(\"Passwords don't match\")\r\n        }\r\n        else{\r\n            dispatch(updateAdminProfile({ id: adminInfo._id, name, email, phoneNumber, password}))\r\n        }\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className=\"mt-5\">Edit Profile</h1>\r\n            { error && <Message variant=\"danger\">{error}</Message>}\r\n            { success && <Message variant=\"success\">Admin Updated</Message>}\r\n            { adminInfo ? \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"name\" placeholder=\"Enter Name...\" value={name} \r\n                        onChange={(e) => setName(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email...\" value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control type=\"number\" placeholder=\"Enter Phone Number...\" value={phoneNumber} \r\n                        onChange={(e) => setPhoneNumber(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Password...\" value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Password Again...\" value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                        Update\r\n                </Button>\r\n            </Form>    \r\n            \r\n        : <Message variant=\"danger\">No Data</Message>\r\n        \r\n        }\r\n\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutSignForScreen.js",["174","175","176"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport { signForWorkout, updateWorkout } from \"../actions/workoutActions\"\r\n\r\nconst WorkoutSignForScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const workoutSignFor = useSelector((state) => state.workoutSignFor)\r\n    const { success, error } = workoutSignFor\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { workouts } = workoutList\r\n\r\n    const workout = workouts.find(w => w._id === match.params.id) || {}\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [date, setDate] = useState(null)\r\n    const [duration, setDuration] = useState('')\r\n    const [equipment, setEquipment] = useState('')\r\n    const [revenuePerClient, setRevenuePerClient] = useState('')\r\n    const [currentClients, setCurrentClients] = useState('')\r\n    const [maxClients, setMaxClients] = useState('')\r\n\r\n    useEffect(() => {\r\n        setDescription(workout.description)\r\n        setDate(workout.date)\r\n        setDuration(workout.duration)\r\n        setEquipment(workout.equipment)\r\n        setRevenuePerClient(workout.revenuePerClient)\r\n        setCurrentClients(workout.currentClients + 1)\r\n        setMaxClients(workout.maxClients) \r\n        if(success){\r\n           setName('')\r\n           setEmail('')\r\n           setPhoneNumber('')\r\n        }\r\n    }, [ success ])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(workout.currentClients < workout.maxClients){\r\n            dispatch(signForWorkout(match.params.id, name, email, phoneNumber))\r\n         dispatch(updateWorkout(\r\n                match.params.id,\r\n                date, \r\n                duration,\r\n                equipment, \r\n                description, \r\n                revenuePerClient, \r\n                currentClients,\r\n                maxClients,\r\n            ))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className=\"mt-5\">Sign Up for Workout</h1>\r\n            { error && <Message variant=\"danger\">{error}</Message>}\r\n            { success && <Message variant=\"success\">Signed up for workout</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"name\" placeholder=\"Enter Name...\" value={name} \r\n                        onChange={(e) => setName(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email...\" value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Phone Number...\" value={phoneNumber} \r\n                        onChange={(e) => setPhoneNumber(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                        Sign Up \r\n                </Button>\r\n            </Form>    \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default WorkoutSignForScreen\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutUpdateScreen.js",["177","178","179","180","181"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { updateWorkout } from \"../actions/workoutActions\"\r\nimport DatePicker from \"react-datepicker\"\r\n\r\n\r\nconst WorkoutUpdateScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const adminLogin = useSelector((state) => state.adminLogin)\r\n    const { adminInfo } = adminLogin\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { workouts } = workoutList\r\n\r\n    const workoutUpdate = useSelector((state) => state.workoutUpdate)\r\n    const { loading, error, success } = workoutUpdate\r\n\r\n    const workout = workouts.find(w => w._id === match.params.id) || {}\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [date, setDate] = useState(null)\r\n    const [duration, setDuration] = useState('')\r\n    const [equipment, setEquipment] = useState('')\r\n    const [revenuePerClient, setRevenuePerClient] = useState('')\r\n    const [currentClients, setCurrentClients] = useState('')\r\n    const [maxClients, setMaxClients] = useState('')\r\n\r\n\r\n    const [d, setD] = useState(null)\r\n\r\n    const [message, setMessage] = useState('')\r\n    \r\n    useEffect(() => {\r\n            setDescription(workout.description)\r\n            setDate(new Date(workout.date))\r\n            setDuration(workout.duration)\r\n            setEquipment(workout.equipment)\r\n            setRevenuePerClient(workout.revenuePerClient)\r\n            setCurrentClients(workout.currentClients)\r\n            setMaxClients(workout.maxClients) \r\n    }, [])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(maxClients < currentClients){\r\n            setMessage(\"max clients shouldn't be smaller than current clients\")\r\n            alert(message)\r\n        } else {\r\n            dispatch(updateWorkout(\r\n                match.params.id,\r\n                date, \r\n                duration,\r\n                equipment, \r\n                description, \r\n                revenuePerClient, \r\n                currentClients,\r\n                maxClients,\r\n            ))\r\n        }\r\n    }\r\n\r\n    const changeHandler = (datePicked) => {\r\n        var d = datePicked\r\n        d.setHours(d.getHours() + 3)\r\n        setDate(d)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className=\"mt-5\">Edit Workout</h1>\r\n            { error && <Message variant=\"danger\">{error}</Message>}\r\n            { loading && <Loader /> }\r\n            { success && <Message variant=\"success\">Successfully updated workout</Message>}\r\n            { /*success && <Message variant=\"success\">Signed up for workout</Message>*/}\r\n            { adminInfo && workout ? \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Description...\" value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Duration (hours)</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Duration...\" value={duration} \r\n                        onChange={(e) => setDuration(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Equipment</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Equipment...\" value={equipment} \r\n                        onChange={(e) => setEquipment(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Price for a client</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Price...\" value={revenuePerClient} \r\n                        onChange={(e) => setRevenuePerClient(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Current Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Current Clients...\" value={currentClients} \r\n                        onChange={(e) => setCurrentClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Max Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Max Clients...\" value={maxClients} \r\n                        onChange={(e) => setMaxClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label required >Choose Date</Form.Label>\r\n                    <DatePicker\r\n                    selected={date}\r\n                    minDate={new Date()} \r\n                    dateFormat=\"dd/MM/yyyy\" \r\n                    isClearable\r\n                    scrollableMonthDropdown \r\n                    showTimeSelect\r\n                    onChange={datePicked =>  changeHandler(datePicked)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                        Update \r\n                </Button>\r\n            </Form> \r\n            : <Message variant=\"danger\">Not logged in as admin</Message> \r\n            }\r\n            \r\n        </FormContainer>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default WorkoutUpdateScreen\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutListScreen.js",["182","183","184"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Table, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Workout from \"../components/Workout\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { deleteWorkout, listWorkouts } from '../actions/workoutActions'\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\nimport { withRouter } from 'react-router-dom'; \r\n\r\n\r\n\r\nconst WorkoutListScreen = ({history, match}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { loading, error, workouts } = workoutList\r\n    \r\n    const workoutDelete = useSelector((state) => state.workoutDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = workoutDelete\r\n\r\n    useEffect(() => {\r\n       dispatch(listWorkouts())\r\n    }, [dispatch])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure?')){\r\n          dispatch(deleteWorkout(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        (\r\n            <>\r\n            <Container className='mt-5'>\r\n                <h1 className='mb-5'>Workout List</h1>\r\n                {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> \r\n            : (\r\n                <>\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>ID</td>\r\n                                <td>DESCRIPTION</td>\r\n                                <td>PRICE</td>\r\n                                <td>DATE</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {workouts.map(workout => <tr key={workout._id}>\r\n                                <td>{workout._id}</td>\r\n                                <td>{workout.description}</td>\r\n                                <td><i class=\"fas fa-shekel-sign\"></i> {workout.revenuePerClient}</td>\r\n                                <td>{workout.date}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/workouts/update/${workout._id}`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" \r\n                                    className=\"btn-sm\" \r\n                                    onClick={() => deleteHandler(workout._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>)}\r\n                        </tbody>\r\n                    </Table>\r\n                    { successDelete && <Message variant=\"success\">Workout deleted</Message>}\r\n                    { errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n                </>\r\n            )}\r\n            <Button onClick={() => history.push('/workouts/create') }>Add new workout</Button>\r\n            </Container>\r\n            </>\r\n    ))\r\n                }\r\n\r\n\r\nexport default withRouter(WorkoutListScreen)","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutsAvailableScreen.js",["185","186","187"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Card } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Workout from \"../components/Workout\"\r\nimport { listWorkouts } from '../actions/workoutActions'\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\n\r\n\r\nconst WorkoutsAvalableScreen = ({match}) => {\r\n\r\n    const keyword = match.params.keyword\r\n    const dispatch = useDispatch()\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { loading, error, workouts } = workoutList\r\n    \r\n    const [ws, setWs] = useState([])  \r\n\r\n    useEffect(() => {\r\n       dispatch(listWorkouts(keyword))\r\n       setWs(workouts.sort(function(w1, w2){\r\n           return new Date(w1.date) - new Date(w2.date)\r\n       }))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        (\r\n            <>\r\n            {loading && <Loader />}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            <Container className='mt-5'>\r\n                <h1 className='mb-5'>All Available Workouts</h1>\r\n                {workouts && workouts.map(workout => (\r\n                    <Workout workout={workout} />\r\n                ))}\r\n            </Container>\r\n            </>\r\n    ))\r\n                }\r\n\r\n\r\nexport default WorkoutsAvalableScreen\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\HeroSection.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\DataSection.js",["188"],"import React from 'react'\r\nimport { Image, Card, Row, Col, Container } from \"react-bootstrap\"\r\n\r\n\r\nconst DataSection = () => {\r\n    return (\r\n        <Container className=\"\">\r\n            <div className=\"d-flex justify-content-center\">\r\n                <h1 className=\"mb-5 mt-5 text-align-center fw-bold\">My Training methods</h1>\r\n            </div>\r\n            <Card className=\"my-3 p-3 rounded border-0\">\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <Card.Body>\r\n                            <Card.Title as=\"h1\">\r\n                                <strong>HIIT Workout</strong>\r\n                            </Card.Title>\r\n                            <Card.Text as=\"p\" className=\"text-start\">\r\n                                HIIT (high-intensity interval training) is a form of exercise that has been proven to boost metabolism and build strength, packing in the same benefits of lower and moderate-intensity aerobic workouts in a much shorter time.\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Container>\r\n                            <Card.Body>\r\n                                <Card.Img src=\"/photos/pho1.jpg\" variant=\"top\"/> \r\n                            </Card.Body> \r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <Card className=\"my-3 p-3 rounded border-0\">\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <Container>\r\n                            <Card.Body>\r\n                                <Card.Img src=\"/photos/pho2.jpg\" variant=\"top\"/> \r\n                            </Card.Body> \r\n                        </Container>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <Card.Body>\r\n                            <Card.Title as=\"h1\" className=\"text-end\">\r\n                                <strong>Spinning Class</strong>\r\n                            </Card.Title>\r\n                            <Card.Text as=\"p\" className=\"text-end\">\r\n                                Indoor cycling, often also called spinning, as an organized sport, is a form of exercise with classes focusing on endurance, strength, intervals, high intensity (race days) and recovery, and involves using a special stationary exercise bicycle with a weighted flywheel in a classroom setting.                            \r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DataSection\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\CalendarScreen.js",["189","190"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Workout from \"../components/Workout\"\r\nimport WorkoutAdmin from \"../components/WorkoutAdmin\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { listWorkouts } from '../actions/workoutActions'\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\nimport DatePicker from \"react-datepicker\"\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\n\r\n\r\nconst CalandarScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [date, setDate] = useState(new Date())\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { loading, error, workouts } = workoutList\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listWorkouts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container className='mt-5'>\r\n            <h1>Schedule</h1>\r\n            <Row className=\"mt-5\">\r\n                <Col md={6}>\r\n                    <Calendar\r\n                        onChange={setDate}\r\n                        value={date}\r\n                        calendarType=\"Hebrew\"\r\n                    />\r\n\r\n                </Col>\r\n                <Col md={6}>\r\n                    {loading && <Loader />}\r\n                    {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n                        {workouts && workouts.map(workout => (\r\n                            new Date(workout.date).getDate() === date.getDate() \r\n                            && new Date(workout.date).getMonth() === date.getMonth()  \r\n                            && new Date(workout.date).getFullYear() === date.getFullYear()\r\n                            && <WorkoutAdmin workout={workout} />\r\n                        ))}\r\n                    <LinkContainer to={`/workouts/create?date=${date.getTime()}`}>\r\n                            <Button>Add a workout</Button>\r\n                    </LinkContainer>\r\n                    \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n            \r\n    )\r\n}\r\n\r\nexport default CalandarScreen\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\WorkoutAdmin.js",[],"C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\screens\\WorkoutCreateScreen.js",["191","192","193","194"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { createWorkout } from \"../actions/workoutActions\"\r\nimport DatePicker from \"react-datepicker\"\r\nimport WorkoutAdmin from '../components/WorkoutAdmin'\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst WorkoutCreateScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const adminLogin = useSelector((state) => state.adminLogin)\r\n    const { adminInfo } = adminLogin\r\n\r\n    const workoutCreate = useSelector((state) => state.workoutCreate)\r\n    const { loading, error, success, workout } = workoutCreate\r\n\r\n\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [date, setDate] = useState(null)\r\n    const [duration, setDuration] = useState('')    \r\n    const [equipment, setEquipment] = useState('')\r\n    const [revenuePerClient, setRevenuePerClient] = useState('')\r\n    const [currentClients, setCurrentClients] = useState('')\r\n    const [maxClients, setMaxClients] = useState('')\r\n\r\n    const search = useLocation().search\r\n    const redate = new URLSearchParams(search).get('date') || null\r\n\r\n    useEffect(() => {\r\n        if(redate !== null){\r\n            setDate(new Date(parseInt(redate)))\r\n        }        \r\n    }, [redate])\r\n\r\n    const [d, setD] = useState(null)\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(maxClients < currentClients){\r\n            setMessage(\"max clients shouldn't be smaller than current clients\")\r\n            alert(message)\r\n        } else {\r\n            dispatch(createWorkout(\r\n                date, \r\n                duration,\r\n                equipment, \r\n                description, \r\n                revenuePerClient, \r\n                currentClients,\r\n                maxClients,\r\n            ))\r\n            setDescription('')\r\n            setDate(null)\r\n            setDuration('')\r\n            setEquipment('')\r\n            setRevenuePerClient('')\r\n            setCurrentClients('')\r\n            setMaxClients('') \r\n        }\r\n    }\r\n\r\n    const changeHandler = (datePicked) => {\r\n        var d = datePicked\r\n        d.setHours(d.getHours() + 3)\r\n        setDate(d)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className=\"mt-5\">Create Workout</h1>\r\n            { error && <Message variant=\"danger\">{error}</Message>}\r\n            { loading && <Loader /> }\r\n            { success\r\n            &&  <>\r\n                    <Message variant=\"success\">Successfully created workout</Message>\r\n                    <WorkoutAdmin workout={workout} />\r\n                </>\r\n            }\r\n            { /*success && <Message variant=\"success\">Signed up for workout</Message>*/}\r\n            { adminInfo  ? \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Description...\" value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Duration (hours)</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Duration...\" value={duration} \r\n                        onChange={(e) => setDuration(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Equipment</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Equipment...\" value={equipment} \r\n                        onChange={(e) => setEquipment(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Price for a client</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Price...\" value={revenuePerClient} \r\n                        onChange={(e) => setRevenuePerClient(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Current Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Current Clients...\" value={currentClients} \r\n                        onChange={(e) => setCurrentClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Max Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Max Clients...\" value={maxClients} \r\n                        onChange={(e) => setMaxClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label required >Choose Date</Form.Label>\r\n                    <DatePicker\r\n                    selected={date}\r\n                    minDate={new Date()} \r\n                    dateFormat=\"dd/MM/yyyy\" \r\n                    isClearable\r\n                    scrollableMonthDropdown \r\n                    showTimeSelect\r\n                    onChange={datePicked =>  changeHandler(datePicked)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                        Add \r\n                </Button>\r\n            </Form> \r\n            : <Message variant=\"danger\">Not logged in as admin</Message> \r\n            }\r\n            \r\n        </FormContainer>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default WorkoutCreateScreen\r\n\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\Introduction.js",["195"],"import React from 'react'\r\nimport \"../css/Introduction.css\"\r\nimport '../App.css';\r\nimport image from \"../css/good.png\"\r\n//import \"font-awesome.min.css\"\r\nimport { Container, Image } from \"react-bootstrap\"\r\nconst Introduction = () => {\r\n    return (\r\n        <div className=\"intro\">\r\n            <Image src={image} width=\"200px\"/>\r\n            <h1>I'm PersonalTrainer, nice to meet you</h1>\r\n            <p>Our team already helped hundreds of clients become the best version of themselves💪</p>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Introduction\r\n","C:\\Users\\reems\\Documents\\My Web Sites\\hotelmanagment\\Frontend\\src\\components\\SearchBox.js",[],{"ruleId":"196","severity":1,"message":"197","line":5,"column":10,"nodeType":"198","messageId":"199","endLine":5,"endColumn":19},{"ruleId":"196","severity":1,"message":"200","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"201","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"202","line":3,"column":34,"nodeType":"198","messageId":"199","endLine":3,"endColumn":45},{"ruleId":"196","severity":1,"message":"200","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"201","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"203","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":10},{"ruleId":"196","severity":1,"message":"204","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":10},{"ruleId":"196","severity":1,"message":"205","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":10},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"196","severity":1,"message":"210","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":13},{"ruleId":"196","severity":1,"message":"211","line":2,"column":15,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"212","line":2,"column":20,"nodeType":"198","messageId":"199","endLine":2,"endColumn":25},{"ruleId":"196","severity":1,"message":"213","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":11},{"ruleId":"206","replacedBy":"214"},{"ruleId":"208","replacedBy":"215"},{"ruleId":"196","severity":1,"message":"200","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"216","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":19},{"ruleId":"196","severity":1,"message":"217","line":3,"column":21,"nodeType":"198","messageId":"199","endLine":3,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":20,"column":8,"nodeType":"220","endLine":20,"endColumn":15,"suggestions":"221"},{"ruleId":"196","severity":1,"message":"222","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":25},{"ruleId":"196","severity":1,"message":"210","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":13},{"ruleId":"196","severity":1,"message":"211","line":3,"column":15,"nodeType":"198","messageId":"199","endLine":3,"endColumn":18},{"ruleId":"196","severity":1,"message":"223","line":23,"column":12,"nodeType":"198","messageId":"199","endLine":23,"endColumn":19},{"ruleId":"218","severity":1,"message":"224","line":34,"column":8,"nodeType":"220","endLine":34,"endColumn":10,"suggestions":"225"},{"ruleId":"196","severity":1,"message":"210","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":13},{"ruleId":"196","severity":1,"message":"211","line":2,"column":15,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"218","severity":1,"message":"226","line":44,"column":8,"nodeType":"220","endLine":44,"endColumn":19,"suggestions":"227"},{"ruleId":"196","severity":1,"message":"210","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":13},{"ruleId":"196","severity":1,"message":"211","line":2,"column":15,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"228","line":34,"column":12,"nodeType":"198","messageId":"199","endLine":34,"endColumn":13},{"ruleId":"196","severity":1,"message":"229","line":34,"column":15,"nodeType":"198","messageId":"199","endLine":34,"endColumn":19},{"ruleId":"218","severity":1,"message":"226","line":46,"column":8,"nodeType":"220","endLine":46,"endColumn":10,"suggestions":"230"},{"ruleId":"196","severity":1,"message":"200","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"231","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":15},{"ruleId":"196","severity":1,"message":"232","line":21,"column":22,"nodeType":"198","messageId":"199","endLine":21,"endColumn":35},{"ruleId":"196","severity":1,"message":"217","line":2,"column":21,"nodeType":"198","messageId":"199","endLine":2,"endColumn":25},{"ruleId":"196","severity":1,"message":"233","line":18,"column":12,"nodeType":"198","messageId":"199","endLine":18,"endColumn":14},{"ruleId":"218","severity":1,"message":"234","line":25,"column":8,"nodeType":"220","endLine":25,"endColumn":18,"suggestions":"235"},{"ruleId":"196","severity":1,"message":"212","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":15},{"ruleId":"196","severity":1,"message":"231","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":15},{"ruleId":"196","severity":1,"message":"236","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":18},{"ruleId":"196","severity":1,"message":"210","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":13},{"ruleId":"196","severity":1,"message":"211","line":2,"column":15,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"228","line":40,"column":12,"nodeType":"198","messageId":"199","endLine":40,"endColumn":13},{"ruleId":"196","severity":1,"message":"229","line":40,"column":15,"nodeType":"198","messageId":"199","endLine":40,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":6,"column":10,"nodeType":"198","messageId":"199","endLine":6,"endColumn":19},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'NavDropdown' is defined but never used.","'p1' is defined but never used.","'p2' is defined but never used.","'p3' is defined but never used.","no-native-reassign",["237"],"no-negated-in-lhs",["238"],"'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'img' is defined but never used.",["237"],["238"],"'axios' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["239"],"'getAdminDetails' is defined but never used.","'message' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'adminInfo' and 'history'. Either include them or remove the dependency array.",["240"],"React Hook useEffect has missing dependencies: 'workout.currentClients', 'workout.date', 'workout.description', 'workout.duration', 'workout.equipment', 'workout.maxClients', and 'workout.revenuePerClient'. Either include them or remove the dependency array.",["241"],"'d' is assigned a value but never used.","'setD' is assigned a value but never used.",["242"],"'Workout' is defined but never used.","'loadingDelete' is assigned a value but never used.","'ws' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'keyword' and 'workouts'. Either include them or remove the dependency array.",["243"],"'DatePicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [dispatch, match]",{"range":"254","text":"255"},"Update the dependencies array to be: [adminInfo, history]",{"range":"256","text":"257"},"Update the dependencies array to be: [success, workout.currentClients, workout.date, workout.description, workout.duration, workout.equipment, workout.maxClients, workout.revenuePerClient]",{"range":"258","text":"259"},"Update the dependencies array to be: [workout.currentClients, workout.date, workout.description, workout.duration, workout.equipment, workout.maxClients, workout.revenuePerClient]",{"range":"260","text":"261"},"Update the dependencies array to be: [dispatch, keyword, workouts]",{"range":"262","text":"263"},[615,622],"[dispatch, match]",[1242,1244],"[adminInfo, history]",[1724,1735],"[success, workout.currentClients, workout.date, workout.description, workout.duration, workout.equipment, workout.maxClients, workout.revenuePerClient]",[1779,1781],"[workout.currentClients, workout.date, workout.description, workout.duration, workout.equipment, workout.maxClients, workout.revenuePerClient]",[837,847],"[dispatch, keyword, workouts]"]