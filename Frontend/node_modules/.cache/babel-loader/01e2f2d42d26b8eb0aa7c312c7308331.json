{"ast":null,"code":"import axios from \"axios\";\nexport const listWorkouts = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'WORKOUT_LIST_REQUEST'\n    });\n    const {\n      data\n    } = await axios.get('/api/workouts');\n    dispatch({\n      type: 'WORKOUT_LIST_SUCCESS',\n      payload: data\n    });\n    localStorage.setItem('workouts', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'WORKOUT_LIST_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const singleWorkout = id => async dispatch => {\n  try {\n    dispatch({\n      type: 'WORKOUT_REQUEST'\n    });\n    const {\n      data\n    } = await axios.get(`/api/workouts/${id}`);\n    dispatch({\n      type: 'WORKOUT_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'WORKOUT_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signForWorkout = (id, name, email, phoneNumber) => async dispatch => {\n  try {\n    dispatch({\n      type: 'WORKOUT_SIGN_FOR_REQUEST'\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/workouts/${id}`, {\n      name,\n      email,\n      phoneNumber\n    }, config);\n    dispatch({\n      type: 'WORKOUT_SIGN_FOR_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'WORKOUT_SIGN_FOR_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateWorkout = (id, date, duration, equipment, description, revenuePerClients, currentClient, maxClients) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'WORKOUT_UPDATE_REQUEST'\n    });\n    const {\n      adminLogin: {\n        adminInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${adminInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/workouts/${id}`, {\n      date,\n      duration,\n      equipment,\n      description,\n      revenuePerClients,\n      currentClients,\n      maxClients\n    }, config);\n    dispatch({\n      type: 'WORKOUT_UPDATE_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'WORKOUT_UPDATE_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/actions/workoutActions.js"],"names":["axios","listWorkouts","dispatch","type","data","get","payload","localStorage","setItem","JSON","stringify","error","response","message","singleWorkout","id","signForWorkout","name","email","phoneNumber","config","headers","post","updateWorkout","date","duration","equipment","description","revenuePerClients","currentClient","maxClients","getState","adminLogin","adminInfo","Authorization","token","put","currentClients"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nexport const listWorkouts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: 'WORKOUT_LIST_REQUEST'})\r\n\r\n        const { data } = await axios.get('/api/workouts')\r\n\r\n        dispatch({\r\n            type: 'WORKOUT_LIST_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('workouts', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'WORKOUT_LIST_FAIL',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const singleWorkout = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: 'WORKOUT_REQUEST'})\r\n\r\n        const { data } = await axios.get(`/api/workouts/${id}`)\r\n\r\n        dispatch({\r\n            type: 'WORKOUT_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'WORKOUT_FAIL',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const signForWorkout = (id, name, email, phoneNumber) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: 'WORKOUT_SIGN_FOR_REQUEST'})\r\n\r\n         const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n\r\n\r\n        const { data } = await axios.post(\r\n            `/api/workouts/${id}`,\r\n            {name, email, phoneNumber},\r\n            config,\r\n            )\r\n\r\n        dispatch({\r\n            type: 'WORKOUT_SIGN_FOR_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'WORKOUT_SIGN_FOR_FAIL',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateWorkout = (id, date, duration, equipment, description, revenuePerClients, currentClient, maxClients) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'WORKOUT_UPDATE_REQUEST'})\r\n\r\n        const {\r\n        adminLogin: { adminInfo },\r\n        } = getState()\r\n\r\n         const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${adminInfo.token}`,\r\n            }\r\n        }\r\n\r\n\r\n        const { data } = await axios.put(\r\n            `/api/workouts/${id}`,\r\n            { date, duration, equipment, description, revenuePerClients, currentClients, maxClients},\r\n            config,\r\n            )\r\n\r\n        dispatch({\r\n            type: 'WORKOUT_UPDATE_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'WORKOUT_UPDATE_FAIL',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}