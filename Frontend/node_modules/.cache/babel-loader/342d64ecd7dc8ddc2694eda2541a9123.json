{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reems\\\\Documents\\\\My Web Sites\\\\hotelmanagment\\\\Frontend\\\\src\\\\screens\\\\WorkoutCreateScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { createWorkout } from \"../actions/workoutActions\";\nimport DatePicker from \"react-datepicker\";\nimport WorkoutAdmin from '../components/WorkoutAdmin';\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WorkoutCreateScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const adminLogin = useSelector(state => state.adminLogin);\n  const {\n    adminInfo\n  } = adminLogin;\n  const workoutCreate = useSelector(state => state.workoutCreate);\n  const {\n    loading,\n    error,\n    success,\n    workout\n  } = workoutCreate;\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState(null);\n  const [duration, setDuration] = useState('');\n  const [equipment, setEquipment] = useState('');\n  const [revenuePerClient, setRevenuePerClient] = useState('');\n  const [currentClients, setCurrentClients] = useState('');\n  const [maxClients, setMaxClients] = useState('');\n  const search = useLocation().search;\n  const redate = new URLSearchParams(search).get('date') || null;\n  useEffect(() => {\n    if (redate !== null) {\n      setDate(new Date(parseInt(redate)));\n    }\n  }, [redate]);\n  const [d, setD] = useState(null);\n  const [message, setMessage] = useState('');\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (maxClients < currentClients) {\n      setMessage(\"max clients shouldn't be smaller than current clients\");\n      alert(message);\n    } else {\n      dispatch(createWorkout(date, duration, equipment, description, revenuePerClient, currentClients, maxClients));\n      setDescription('');\n      setDate(null);\n      setDuration('');\n      setEquipment('');\n      setRevenuePerClient('');\n      setCurrentClients('');\n      setMaxClients('');\n    }\n  };\n\n  const changeHandler = datePicked => {\n    var d = datePicked;\n    d.setHours(d.getHours() + 3);\n    setDate(d);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"Create Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 26\n    }, this), success && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Successfully created workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WorkoutAdmin, {\n        workout: workout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), adminInfo ? /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Description...\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Duration (hours)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Duration...\",\n          value: duration,\n          onChange: e => setDuration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Equipment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Equipment...\",\n          value: equipment,\n          onChange: e => setEquipment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price for a client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Price...\",\n          value: revenuePerClient,\n          onChange: e => setRevenuePerClient(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Current Amount Of Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Current Clients...\",\n          value: currentClients,\n          onChange: e => setCurrentClients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Max Amount Of Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Max Clients...\",\n          value: maxClients,\n          onChange: e => setMaxClients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          required: true,\n          children: \"Choose Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: date,\n          minDate: new Date(),\n          dateFormat: \"dd/MM/yyyy\",\n          isClearable: true,\n          scrollableMonthDropdown: true,\n          showTimeSelect: true,\n          onChange: datePicked => changeHandler(datePicked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: \"Not logged in as admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WorkoutCreateScreen, \"Lkp0ITgDCBioPwdzvFGqz4GDmNI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useLocation];\n});\n\n_c = WorkoutCreateScreen;\nexport default WorkoutCreateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutCreateScreen\");","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/screens/WorkoutCreateScreen.js"],"names":["React","useState","useEffect","Row","Col","Form","Button","FormContainer","useDispatch","useSelector","Message","Loader","createWorkout","DatePicker","WorkoutAdmin","useLocation","WorkoutCreateScreen","history","match","dispatch","adminLogin","state","adminInfo","workoutCreate","loading","error","success","workout","description","setDescription","date","setDate","duration","setDuration","equipment","setEquipment","revenuePerClient","setRevenuePerClient","currentClients","setCurrentClients","maxClients","setMaxClients","search","redate","URLSearchParams","get","Date","parseInt","d","setD","message","setMessage","submitHandler","e","preventDefault","alert","changeHandler","datePicked","setHours","getHours","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { createWorkout } from \"../actions/workoutActions\"\r\nimport DatePicker from \"react-datepicker\"\r\nimport WorkoutAdmin from '../components/WorkoutAdmin'\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst WorkoutCreateScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const adminLogin = useSelector((state) => state.adminLogin)\r\n    const { adminInfo } = adminLogin\r\n\r\n    const workoutCreate = useSelector((state) => state.workoutCreate)\r\n    const { loading, error, success, workout } = workoutCreate\r\n\r\n\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [date, setDate] = useState(null)\r\n    const [duration, setDuration] = useState('')    \r\n    const [equipment, setEquipment] = useState('')\r\n    const [revenuePerClient, setRevenuePerClient] = useState('')\r\n    const [currentClients, setCurrentClients] = useState('')\r\n    const [maxClients, setMaxClients] = useState('')\r\n\r\n    const search = useLocation().search\r\n    const redate = new URLSearchParams(search).get('date') || null\r\n\r\n    useEffect(() => {\r\n        if(redate !== null){\r\n            setDate(new Date(parseInt(redate)))\r\n        }        \r\n    }, [redate])\r\n\r\n    const [d, setD] = useState(null)\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(maxClients < currentClients){\r\n            setMessage(\"max clients shouldn't be smaller than current clients\")\r\n            alert(message)\r\n        } else {\r\n            dispatch(createWorkout(\r\n                date, \r\n                duration,\r\n                equipment, \r\n                description, \r\n                revenuePerClient, \r\n                currentClients,\r\n                maxClients,\r\n            ))\r\n            setDescription('')\r\n            setDate(null)\r\n            setDuration('')\r\n            setEquipment('')\r\n            setRevenuePerClient('')\r\n            setCurrentClients('')\r\n            setMaxClients('') \r\n        }\r\n    }\r\n\r\n    const changeHandler = (datePicked) => {\r\n        var d = datePicked\r\n        d.setHours(d.getHours() + 3)\r\n        setDate(d)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className=\"mt-5\">Create Workout</h1>\r\n            { error && <Message variant=\"danger\">{error}</Message>}\r\n            { loading && <Loader /> }\r\n            { success\r\n            &&  <>\r\n                    <Message variant=\"success\">Successfully created workout</Message>\r\n                    <WorkoutAdmin workout={workout} />\r\n                </>\r\n            }\r\n            { /*success && <Message variant=\"success\">Signed up for workout</Message>*/}\r\n            { adminInfo  ? \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Description...\" value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Duration (hours)</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Duration...\" value={duration} \r\n                        onChange={(e) => setDuration(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Equipment</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Equipment...\" value={equipment} \r\n                        onChange={(e) => setEquipment(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Price for a client</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Price...\" value={revenuePerClient} \r\n                        onChange={(e) => setRevenuePerClient(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Current Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Current Clients...\" value={currentClients} \r\n                        onChange={(e) => setCurrentClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Max Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Max Clients...\" value={maxClients} \r\n                        onChange={(e) => setMaxClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label required >Choose Date</Form.Label>\r\n                    <DatePicker\r\n                    selected={date}\r\n                    minDate={new Date()} \r\n                    dateFormat=\"dd/MM/yyyy\" \r\n                    isClearable\r\n                    scrollableMonthDropdown \r\n                    showTimeSelect\r\n                    onChange={datePicked =>  changeHandler(datePicked)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                        Add \r\n                </Button>\r\n            </Form> \r\n            : <Message variant=\"danger\">Not logged in as admin</Message> \r\n            }\r\n            \r\n        </FormContainer>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default WorkoutCreateScreen\r\n\r\n"]},"metadata":{},"sourceType":"module"}