{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reems\\\\Documents\\\\My Web Sites\\\\hotelmanagment\\\\Frontend\\\\src\\\\screens\\\\CalendarScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Workout from \"../components/Workout\";\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { listWorkouts } from '../actions/workoutActions';\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalandarScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [date, setDate] = useState(new Date());\n  const workoutList = useSelector(state => state.workoutList);\n  const {\n    loading,\n    error,\n    workouts\n  } = workoutList;\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  };\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  });\n  const events = [];\n  useEffect(() => {\n    dispatch(listWorkouts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: date,\n          minDate: new Date(),\n          dateFormat: \"dd/MM/yyyy\",\n          scrollableMonthDropdown: true,\n          onChange: d => setDate(d)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          localizer: localizer,\n          events: events,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          style: {\n            height: 500,\n            margin: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 31\n        }, this), workouts && workouts.map(workout => new Date(workout.date).getDate() === date.getDate() && new Date(workout.date).getMonth() === date.getMonth() && new Date(workout.date).getFullYear() === date.getFullYear() && /*#__PURE__*/_jsxDEV(Workout, {\n          workout: workout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 32\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalandarScreen, \"5NiT2YnHafqXERjJxeEU90RTa9c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CalandarScreen;\nexport default CalandarScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalandarScreen\");","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/screens/CalendarScreen.js"],"names":["React","useState","useEffect","Container","Button","Row","Col","useDispatch","useSelector","Workout","LinkContainer","listWorkouts","Loader","Message","DatePicker","CalandarScreen","dispatch","date","setDate","Date","workoutList","state","loading","error","workouts","locales","require","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","events","d","height","margin","map","workout","getDate","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Workout from \"../components/Workout\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { listWorkouts } from '../actions/workoutActions'\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\nimport DatePicker from \"react-datepicker\"\r\n\r\n\r\n\r\nconst CalandarScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [date, setDate] = useState(new Date())\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { loading, error, workouts } = workoutList\r\n\r\n\r\n    const locales = {\r\n    \"en-US\": require(\"date-fns/locale/en-US\"),\r\n    }\r\n\r\n    const localizer = dateFnsLocalizer({\r\n        format,\r\n        parse,\r\n        startOfWeek,\r\n        getDay,\r\n        locales,\r\n    })\r\n\r\n    const events = []\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listWorkouts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container className='mt-5'>\r\n            <h1>Schedule</h1>\r\n            <Row className=\"mt-5\">\r\n                <Col md={6}>\r\n                    <DatePicker\r\n                    selected={date}\r\n                    minDate={new Date()} \r\n                    dateFormat=\"dd/MM/yyyy\" \r\n                    scrollableMonthDropdown \r\n                    onChange={d =>  setDate(d) } />\r\n                \r\n                <Calendar localizer={localizer} events={events} startAccessor=\"start\" endAccessor=\"end\" style={{ height: 500, margin: \"50px\" }} />\r\n\r\n\r\n                </Col>\r\n                <Col md={6}>\r\n                    {loading && <Loader />}\r\n                    {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n                        {workouts && workouts.map(workout => (\r\n                            new Date(workout.date).getDate() === date.getDate() \r\n                            && new Date(workout.date).getMonth() === date.getMonth()  \r\n                            && new Date(workout.date).getFullYear() === date.getFullYear()\r\n                            && <Workout workout={workout} />\r\n                        ))}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n            \r\n    )\r\n}\r\n\r\nexport default CalandarScreen\r\n"]},"metadata":{},"sourceType":"module"}