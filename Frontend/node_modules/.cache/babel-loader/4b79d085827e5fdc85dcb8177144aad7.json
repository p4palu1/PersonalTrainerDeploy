{"ast":null,"code":"import axios from \"axios\";\nexport const listWorkouts = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'WORKOUT_LIST_REQUEST'\n    });\n    const {\n      data\n    } = await axios.get('/api/workouts');\n    dispatch({\n      type: 'WORKOUT_LIST_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'WORKOUT_LIST_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const singleWorkout = (id, user) => async dispatch => {\n  try {\n    dispatch({\n      type: 'WORKOUT_REQUEST'\n    });\n    const {\n      data\n    } = await axios.get(`/api/workouts/${id}`);\n    dispatch({\n      type: 'WORKOUT_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'WORKOUT_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signForWorkout = (id, name, email, phoneNumber) => async dispatch => {\n  try {\n    dispatch({\n      type: 'WORKOUT_SIGN_FOR_REQUEST'\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/workouts/${id}`, {\n      name,\n      email,\n      phoneNumber\n    }, config);\n    dispatch({\n      type: 'WORKOUT_SIGN_FOR_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'WORKOUT_SIGN_FOR_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateWorkout = (name, date, duration, equipment, revenuePerClient, currentClient, maxClient) => async dispatch => {\n  try {\n    dispatch({\n      type: 'WORKOUT_UPDATE_REQUEST'\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${adminInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/workouts/${id}`, {\n      name,\n      date,\n      duration,\n      equipment,\n      revenuePerClient,\n      currentClient,\n      maxClient\n    }, config);\n    dispatch({\n      type: 'WORKOUT_SIGN_FOR_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'WORKOUT_SIGN_FOR_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/actions/workoutActions.js"],"names":["axios","listWorkouts","dispatch","type","data","get","payload","error","response","message","singleWorkout","id","user","signForWorkout","name","email","phoneNumber","config","headers","post","updateWorkout","date","duration","equipment","revenuePerClient","currentClient","maxClient","Authorization","adminInfo","token","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAmB;AACjD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,sBADD;AAELG,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,mBADD;AAELG,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACTF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADX,GACqBF,KAAK,CAACE;AAH/B,KAAD,CAAR;AAKH;AACJ,CAlBM;AAoBP,OAAO,MAAMC,aAAa,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc,MAAMV,QAAN,IAAmB;AAC1D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,iBAAgBM,EAAG,EAA9B,CAAvB;AAEAT,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,iBADD;AAELG,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,cADD;AAELG,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACTF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADX,GACqBF,KAAK,CAACE;AAH/B,KAAD,CAAR;AAKH;AACJ,CAlBM;AAqBP,OAAO,MAAMI,cAAc,GAAG,CAACF,EAAD,EAAKG,IAAL,EAAWC,KAAX,EAAkBC,WAAlB,KAAkC,MAAMd,QAAN,IAAmB;AAC/E,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AAEC,UAAMc,MAAM,GAAG;AACZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADG,KAAf;AAOD,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACmB,IAAN,CAClB,iBAAgBR,EAAG,EADD,EAEnB;AAACG,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAFmB,EAGnBC,MAHmB,CAAvB;AAMAf,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,0BADD;AAELG,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,uBADD;AAELG,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACTF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADX,GACqBF,KAAK,CAACE;AAH/B,KAAD,CAAR;AAKH;AACJ,CA7BM;AA+BP,OAAO,MAAMW,aAAa,GAAG,CAACN,IAAD,EAAOO,IAAP,EAAaC,QAAb,EAAuBC,SAAvB,EAAkCC,gBAAlC,EAAoDC,aAApD,EAAmEC,SAAnE,KAAiF,MAAMxB,QAAN,IAAmB;AAC7H,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AAEC,UAAMc,MAAM,GAAG;AACZC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELS,QAAAA,aAAa,EAAG,UAASC,SAAS,CAACC,KAAM;AAFpC;AADG,KAAf;AAQD,UAAM;AAAEzB,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAAC8B,GAAN,CAClB,iBAAgBnB,EAAG,EADD,EAEnB;AAACG,MAAAA,IAAD;AAAOO,MAAAA,IAAP;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,SAAvB;AAAkCC,MAAAA,gBAAlC;AAAoDC,MAAAA,aAApD;AAAmEC,MAAAA;AAAnE,KAFmB,EAGnBT,MAHmB,CAAvB;AAMAf,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,0BADD;AAELG,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAtBD,CAsBE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,uBADD;AAELG,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACTF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADX,GACqBF,KAAK,CAACE;AAH/B,KAAD,CAAR;AAKH;AACJ,CA9BM","sourcesContent":["import axios from \"axios\"\r\nexport const listWorkouts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: 'WORKOUT_LIST_REQUEST'})\r\n\r\n        const { data } = await axios.get('/api/workouts')\r\n\r\n        dispatch({\r\n            type: 'WORKOUT_LIST_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'WORKOUT_LIST_FAIL',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const singleWorkout = (id, user) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: 'WORKOUT_REQUEST'})\r\n\r\n        const { data } = await axios.get(`/api/workouts/${id}`)\r\n\r\n        dispatch({\r\n            type: 'WORKOUT_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'WORKOUT_FAIL',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const signForWorkout = (id, name, email, phoneNumber) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: 'WORKOUT_SIGN_FOR_REQUEST'})\r\n\r\n         const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n\r\n\r\n        const { data } = await axios.post(\r\n            `/api/workouts/${id}`,\r\n            {name, email, phoneNumber},\r\n            config,\r\n            )\r\n\r\n        dispatch({\r\n            type: 'WORKOUT_SIGN_FOR_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'WORKOUT_SIGN_FOR_FAIL',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateWorkout = (name, date, duration, equipment, revenuePerClient, currentClient, maxClient) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: 'WORKOUT_UPDATE_REQUEST'})\r\n\r\n         const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${adminInfo.token}`,\r\n            }\r\n        }\r\n\r\n\r\n        const { data } = await axios.put(\r\n            `/api/workouts/${id}`,\r\n            {name, date, duration, equipment, revenuePerClient, currentClient, maxClient},\r\n            config,\r\n            )\r\n\r\n        dispatch({\r\n            type: 'WORKOUT_SIGN_FOR_SUCCESS',\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'WORKOUT_SIGN_FOR_FAIL',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}