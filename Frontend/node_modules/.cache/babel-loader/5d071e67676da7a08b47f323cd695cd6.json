{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reems\\\\Documents\\\\My Web Sites\\\\hotelmanagment\\\\Frontend\\\\src\\\\screens\\\\WorkoutSignForScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { signForWorkout } from \"../actions/workoutActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkoutSignForScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const workoutSignFor = useSelector(state => state.workoutSignFor);\n  const {\n    success,\n    error\n  } = workoutSignFor;\n  const workoutList = useSelector(state => state.workoutList);\n  const {\n    workouts\n  } = workoutList;\n  const workout = workouts.find(w => w._id === match.params.id) || {};\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState(null);\n  const [duration, setDuration] = useState('');\n  const [equipment, setEquipment] = useState('');\n  const [revenuePerClient, setRevenuePerClient] = useState('');\n  const [currentClients, setCurrentClients] = useState('');\n  const [maxClients, setMaxClients] = useState('');\n  useEffect(() => {\n    setDescription(workout.description);\n    setDate(workout.date);\n    setDuration(workout.duration);\n    setEquipment(workout.equipment);\n    setRevenuePerClient(workout.revenuePerClient);\n    setCurrentClients(workout.currentClients);\n    setMaxClients(workout.maxClients);\n\n    if (success) {\n      setName('');\n      setEmail('');\n      setPhoneNumber('');\n    }\n  }, [success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(signForWorkout(match.params.id, name, email, phoneNumber));\n    dispatch(updateWorkout(match.params.id, date, duration, equipment, description, revenuePerClient, currentClients, maxClients));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"Sign Up for Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"success\",\n      children: \"Signed up for workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"name\",\n          placeholder: \"Enter Name...\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter Email...\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Phone Number...\",\n          value: phoneNumber,\n          onChange: e => setPhoneNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WorkoutSignForScreen, \"opYLfXT5mqAZAmInpHgRlgkp/DU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = WorkoutSignForScreen;\nexport default WorkoutSignForScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutSignForScreen\");","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/screens/WorkoutSignForScreen.js"],"names":["React","useState","useEffect","Row","Col","Form","Button","FormContainer","useDispatch","useSelector","Message","signForWorkout","WorkoutSignForScreen","history","match","dispatch","workoutSignFor","state","success","error","workoutList","workouts","workout","find","w","_id","params","id","name","setName","email","setEmail","phoneNumber","setPhoneNumber","description","setDescription","date","setDate","duration","setDuration","equipment","setEquipment","revenuePerClient","setRevenuePerClient","currentClients","setCurrentClients","maxClients","setMaxClients","submitHandler","e","preventDefault","updateWorkout","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport { signForWorkout } from \"../actions/workoutActions\"\r\n\r\nconst WorkoutSignForScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const workoutSignFor = useSelector((state) => state.workoutSignFor)\r\n    const { success, error } = workoutSignFor\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { workouts } = workoutList\r\n\r\n    const workout = workouts.find(w => w._id === match.params.id) || {}\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [date, setDate] = useState(null)\r\n    const [duration, setDuration] = useState('')\r\n    const [equipment, setEquipment] = useState('')\r\n    const [revenuePerClient, setRevenuePerClient] = useState('')\r\n    const [currentClients, setCurrentClients] = useState('')\r\n    const [maxClients, setMaxClients] = useState('')\r\n\r\n    useEffect(() => {\r\n        setDescription(workout.description)\r\n            setDate(workout.date)\r\n            setDuration(workout.duration)\r\n            setEquipment(workout.equipment)\r\n            setRevenuePerClient(workout.revenuePerClient)\r\n            setCurrentClients(workout.currentClients)\r\n            setMaxClients(workout.maxClients) \r\n        if(success){\r\n           setName('')\r\n           setEmail('')\r\n           setPhoneNumber('')\r\n        }\r\n    }, [ success ])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(signForWorkout(match.params.id, name, email, phoneNumber))\r\n         dispatch(updateWorkout(\r\n                match.params.id,\r\n                date, \r\n                duration,\r\n                equipment, \r\n                description, \r\n                revenuePerClient, \r\n                currentClients,\r\n                maxClients,\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className=\"mt-5\">Sign Up for Workout</h1>\r\n            { error && <Message variant=\"danger\">{error}</Message>}\r\n            { success && <Message variant=\"success\">Signed up for workout</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"name\" placeholder=\"Enter Name...\" value={name} \r\n                        onChange={(e) => setName(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email...\" value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Phone Number...\" value={phoneNumber} \r\n                        onChange={(e) => setPhoneNumber(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                        Sign Up \r\n                </Button>\r\n            </Form>    \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default WorkoutSignForScreen\r\n"]},"metadata":{},"sourceType":"module"}