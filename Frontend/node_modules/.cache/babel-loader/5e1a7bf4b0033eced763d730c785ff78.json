{"ast":null,"code":"import _slicedToArray from\"C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Container,Button,Row,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Workout from\"../components/Workout\";import WorkoutAdmin from\"../components/WorkoutAdmin\";import{LinkContainer}from'react-router-bootstrap';import{listWorkouts}from'../actions/workoutActions';import Loader from\"../components/Loader\";import Message from\"../components/Message\";import DatePicker from\"react-datepicker\";import Calendar from'react-calendar';import'react-calendar/dist/Calendar.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CalandarScreen=function CalandarScreen(){var dispatch=useDispatch();var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),date=_useState2[0],setDate=_useState2[1];var workoutList=useSelector(function(state){return state.workoutList;});var loading=workoutList.loading,error=workoutList.error,workouts=workoutList.workouts;useEffect(function(){dispatch(listWorkouts());},[dispatch]);return/*#__PURE__*/_jsxs(Container,{className:\"mt-5\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Schedule\"}),/*#__PURE__*/_jsxs(Row,{className:\"mt-5\",children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Calendar,{onChange:setDate,value:date,calendarType:\"Hebrew\"})}),/*#__PURE__*/_jsxs(Col,{md:6,children:[loading&&/*#__PURE__*/_jsx(Loader,{}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),workouts&&workouts.map(function(workout){return new Date(workout.date).getDate()===date.getDate()&&new Date(workout.date).getMonth()===date.getMonth()&&new Date(workout.date).getFullYear()===date.getFullYear()&&/*#__PURE__*/_jsx(WorkoutAdmin,{workout:workout});}),/*#__PURE__*/_jsx(LinkContainer,{to:\"/workouts/create?date=\".concat(date.getTime()),children:/*#__PURE__*/_jsx(Button,{children:\"Add a workout\"})})]})]})]});};export default CalandarScreen;","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/screens/CalendarScreen.js"],"names":["React","useState","useEffect","Container","Button","Row","Col","useDispatch","useSelector","Workout","WorkoutAdmin","LinkContainer","listWorkouts","Loader","Message","DatePicker","Calendar","CalandarScreen","dispatch","Date","date","setDate","workoutList","state","loading","error","workouts","map","workout","getDate","getMonth","getFullYear","getTime"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,GAA5B,CAAiCC,GAAjC,KAA4C,iBAA5C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,YAAT,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAO,kCAAP,C,wFAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEA,cAAwBN,QAAQ,CAAC,GAAIkB,CAAAA,IAAJ,EAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,WAAW,CAAGd,WAAW,CAAC,SAACe,KAAD,QAAWA,CAAAA,KAAK,CAACD,WAAjB,EAAD,CAA/B,CACA,GAAQE,CAAAA,OAAR,CAAqCF,WAArC,CAAQE,OAAR,CAAiBC,KAAjB,CAAqCH,WAArC,CAAiBG,KAAjB,CAAwBC,QAAxB,CAAqCJ,WAArC,CAAwBI,QAAxB,CAIAxB,SAAS,CAAC,UAAM,CACZgB,QAAQ,CAACN,YAAY,EAAb,CAAR,CACH,CAFQ,CAEN,CAACM,QAAD,CAFM,CAAT,CAIA,mBACI,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACI,gCADJ,cAEI,MAAC,GAAD,EAAK,SAAS,CAAC,MAAf,wBACI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,KAAC,QAAD,EACI,QAAQ,CAAEG,OADd,CAEI,KAAK,CAAED,IAFX,CAGI,YAAY,CAAC,QAHjB,EADJ,EADJ,cASI,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,WACKI,OAAO,eAAI,KAAC,MAAD,IADhB,CAEKC,KAAK,eAAI,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,KAA3B,EAFd,CAISC,QAAQ,EAAIA,QAAQ,CAACC,GAAT,CAAa,SAAAC,OAAO,QAC7B,IAAIT,CAAAA,IAAJ,CAASS,OAAO,CAACR,IAAjB,EAAuBS,OAAvB,KAAqCT,IAAI,CAACS,OAAL,EAArC,EACG,GAAIV,CAAAA,IAAJ,CAASS,OAAO,CAACR,IAAjB,EAAuBU,QAAvB,KAAsCV,IAAI,CAACU,QAAL,EADzC,EAEG,GAAIX,CAAAA,IAAJ,CAASS,OAAO,CAACR,IAAjB,EAAuBW,WAAvB,KAAyCX,IAAI,CAACW,WAAL,EAF5C,eAGG,KAAC,YAAD,EAAc,OAAO,CAAEH,OAAvB,EAJ0B,EAApB,CAJrB,cAUI,KAAC,aAAD,EAAe,EAAE,iCAA2BR,IAAI,CAACY,OAAL,EAA3B,CAAjB,uBACQ,KAAC,MAAD,4BADR,EAVJ,GATJ,GAFJ,GADJ,CA+BH,CA7CD,CA+CA,cAAef,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Workout from \"../components/Workout\"\r\nimport WorkoutAdmin from \"../components/WorkoutAdmin\"\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { listWorkouts } from '../actions/workoutActions'\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\nimport DatePicker from \"react-datepicker\"\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\n\r\n\r\nconst CalandarScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [date, setDate] = useState(new Date())\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { loading, error, workouts } = workoutList\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listWorkouts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container className='mt-5'>\r\n            <h1>Schedule</h1>\r\n            <Row className=\"mt-5\">\r\n                <Col md={6}>\r\n                    <Calendar\r\n                        onChange={setDate}\r\n                        value={date}\r\n                        calendarType=\"Hebrew\"\r\n                    />\r\n\r\n                </Col>\r\n                <Col md={6}>\r\n                    {loading && <Loader />}\r\n                    {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n                        {workouts && workouts.map(workout => (\r\n                            new Date(workout.date).getDate() === date.getDate() \r\n                            && new Date(workout.date).getMonth() === date.getMonth()  \r\n                            && new Date(workout.date).getFullYear() === date.getFullYear()\r\n                            && <WorkoutAdmin workout={workout} />\r\n                        ))}\r\n                    <LinkContainer to={`/workouts/create?date=${date.getTime()}`}>\r\n                            <Button>Add a workout</Button>\r\n                    </LinkContainer>\r\n                    \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n            \r\n    )\r\n}\r\n\r\nexport default CalandarScreen\r\n"]},"metadata":{},"sourceType":"module"}