{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reems\\\\Documents\\\\My Web Sites\\\\hotelmanagment\\\\Frontend\\\\src\\\\screens\\\\WorkoutUpdateScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { updateWorkout, singleWorkout } from \"../actions/workoutActions\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkoutUpdateScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const workoutSingle = useSelector(state => state.workoutSingle);\n  const {\n    loading,\n    error,\n    workout\n  } = workoutSingle;\n  const workoutUpdate = useSelector(state => state.workoutUpdate);\n  const {\n    success: successUpdate,\n    error: errorUpdate\n  } = workoutUpdate;\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    dispatch(singleWorkout(match.params.id));\n    setDescription(workout.description);\n  }, [dispatch]);\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState(workout.date);\n  const [duration, setDuration] = useState(workout.duration);\n  const [equipment, setEquipment] = useState(workout.equipment);\n  const [revenuePerClient, setRevenuePerClient] = useState(workout.revenuePerClient);\n  const [currentClients, setCurrentClients] = useState(workout.currentClients);\n  const [maxClients, setMaxClients] = useState(workout.maxClients);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (maxClients < currentClients) {\n      setMessage(\"max clients shouldn't be smaller than current clients\");\n      alert(message);\n    } else {\n      //dispatch\n      console.log(date);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"Edit Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Description...\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Duration (hours)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Duration...\",\n          value: duration,\n          onChange: e => setDuration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Equipment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Equipment...\",\n          value: equipment,\n          onChange: e => setEquipment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price for a client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Price...\",\n          value: revenuePerClient,\n          onChange: e => setRevenuePerClient(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Current Amount Of Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Current Clients...\",\n          value: currentClients,\n          onChange: e => setCurrentClients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Max Amount Of Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Max Clients...\",\n          value: maxClients,\n          onChange: e => setMaxClients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          required: true,\n          children: \"Choose Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: date,\n          minDate: new Date(),\n          dateFormat: \"dd/MM/yyyy\",\n          isClearable: true,\n          scrollableMonthDropdown: true,\n          showTimeSelect: true,\n          dateFormat: \"Pp\",\n          onChange: datePicked => setDate(datePicked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WorkoutUpdateScreen, \"8PmiDVei5ehiXJV7vgse3l4nVEs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = WorkoutUpdateScreen;\nexport default WorkoutUpdateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutUpdateScreen\");","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/screens/WorkoutUpdateScreen.js"],"names":["React","useState","useEffect","Row","Col","Form","Button","FormContainer","useDispatch","useSelector","Message","Loader","updateWorkout","singleWorkout","DatePicker","WorkoutUpdateScreen","history","match","dispatch","workoutSingle","state","loading","error","workout","workoutUpdate","success","successUpdate","errorUpdate","message","setMessage","params","id","setDescription","description","date","setDate","duration","setDuration","equipment","setEquipment","revenuePerClient","setRevenuePerClient","currentClients","setCurrentClients","maxClients","setMaxClients","submitHandler","e","preventDefault","alert","console","log","target","value","Date","datePicked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { updateWorkout, singleWorkout } from \"../actions/workoutActions\"\r\nimport DatePicker from \"react-datepicker\"\r\n\r\n\r\nconst WorkoutUpdateScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const workoutSingle = useSelector((state) => state.workoutSingle)\r\n    const { loading, error, workout} = workoutSingle\r\n\r\n    const workoutUpdate = useSelector((state) => state.workoutUpdate)\r\n    const { success: successUpdate, error: errorUpdate } = workoutUpdate\r\n\r\n\r\n    const [message, setMessage] = useState('')\r\n    \r\n    useEffect(() => {\r\n        dispatch(singleWorkout(match.params.id))\r\n        setDescription(workout.description)\r\n    }, [dispatch])\r\n\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [date, setDate] = useState(workout.date)\r\n    const [duration, setDuration] = useState(workout.duration)\r\n    const [equipment, setEquipment] = useState(workout.equipment)\r\n    const [revenuePerClient, setRevenuePerClient] = useState(workout.revenuePerClient)\r\n    const [currentClients, setCurrentClients] = useState(workout.currentClients)\r\n    const [maxClients, setMaxClients] = useState(workout.maxClients)\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(maxClients < currentClients){\r\n            setMessage(\"max clients shouldn't be smaller than current clients\")\r\n            alert(message)\r\n        } else {\r\n            //dispatch\r\n            console.log(date)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className=\"mt-5\">Edit Workout</h1>\r\n            { loading && <Loader /> }\r\n            { error && <Message variant=\"danger\">{error}</Message>}\r\n            { /*success && <Message variant=\"success\">Signed up for workout</Message>*/}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Description...\" value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Duration (hours)</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Duration...\" value={duration} \r\n                        onChange={(e) => setDuration(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Equipment</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Equipment...\" value={equipment} \r\n                        onChange={(e) => setEquipment(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Price for a client</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Price...\" value={revenuePerClient} \r\n                        onChange={(e) => setRevenuePerClient(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Current Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Current Clients...\" value={currentClients} \r\n                        onChange={(e) => setCurrentClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Max Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Max Clients...\" value={maxClients} \r\n                        onChange={(e) => setMaxClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label required >Choose Date</Form.Label>\r\n                    <DatePicker selected={date} \r\n                    minDate={new Date()} \r\n                    dateFormat=\"dd/MM/yyyy\" \r\n                    isClearable\r\n                    scrollableMonthDropdown \r\n                    showTimeSelect\r\n                    dateFormat=\"Pp\"\r\n                    onChange={datePicked => setDate(datePicked)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                        Update \r\n                </Button>\r\n            </Form>    \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default WorkoutUpdateScreen\r\n"]},"metadata":{},"sourceType":"module"}