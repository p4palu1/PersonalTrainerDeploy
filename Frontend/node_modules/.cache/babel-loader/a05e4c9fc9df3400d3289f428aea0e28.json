{"ast":null,"code":"import React from'react';import{Card,Container,Row,Col,Button,ListGroup}from\"react-bootstrap\";import{withRouter}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WorkoutAdmin=function WorkoutAdmin(_ref){var workout=_ref.workout,history=_ref.history;var handleSignUp=function handleSignUp(name){history.push(\"/workouts/update/\".concat(workout._id));};return/*#__PURE__*/_jsx(Card,{className:\"my-3 p-3 rounded\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{as:\"h1\",children:/*#__PURE__*/_jsx(\"strong\",{children:workout.description})}),/*#__PURE__*/_jsxs(Card.Text,{as:\"h3\",children:[\"On \",\"\".concat(workout.date.substring(8,10),\".\").concat(workout.date.substring(5,7),\", \").concat(workout.date.substring(11,16),\" \"),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-clock\"})]}),/*#__PURE__*/_jsx(Card.Text,{as:\"p\",children:\"Price: \".concat(workout.revenuePerClient,\" shekels\")}),/*#__PURE__*/_jsxs(Card.Text,{as:\"p\",children:[\"Duration: \",workout.duration>1?\"\".concat(workout.duration,\" hours\"):\"\".concat(workout.duration,\" hour\")]})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(ListGroup,{children:[/*#__PURE__*/_jsx(ListGroup.Item,{as:\"h4\",className:\"border-0\",children:Number(workout.maxClients-workout.currentClients)===0?'Sold Out':Number(workout.maxClients-workout.currentClients)===1?'1 Place left!':\"\".concat(Number(workout.maxClients-workout.currentClients),\" Places Left\")}),/*#__PURE__*/_jsx(ListGroup.Item,{className:\"border-0\",children:/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"dark\",disabled:Number(workout.maxClients-workout.currentClients)===0,onClick:function onClick(){return handleSignUp(workout.description);},children:\"Edit\"})})]})})})})]})});};export default withRouter(WorkoutAdmin);","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/components/WorkoutAdmin.js"],"names":["React","Card","Container","Row","Col","Button","ListGroup","withRouter","WorkoutAdmin","workout","history","handleSignUp","name","push","_id","description","date","substring","revenuePerClient","duration","Number","maxClients","currentClients"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,SAAf,CAA0BC,GAA1B,CAA+BC,GAA/B,CAAoCC,MAApC,CAA4CC,SAA5C,KAA6D,iBAA7D,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAwB,IAAtBC,CAAAA,OAAsB,MAAtBA,OAAsB,CAAbC,OAAa,MAAbA,OAAa,CAEzC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAU,CAC3BF,OAAO,CAACG,IAAR,4BAAiCJ,OAAO,CAACK,GAAzC,GACH,CAFD,CAIA,mBACI,KAAC,IAAD,EAAM,SAAS,CAAC,kBAAhB,uBACI,MAAC,GAAD,yBACI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,MAAC,IAAD,CAAM,IAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,IAAf,uBACI,wBAASL,OAAO,CAACM,WAAjB,EADJ,EADJ,cAII,MAAC,IAAD,CAAM,IAAN,EAAW,EAAE,CAAC,IAAd,2BACWN,OAAO,CAACO,IAAR,CAAaC,SAAb,CAAuB,CAAvB,CAAyB,EAAzB,CADX,aAC2CR,OAAO,CAACO,IAAR,CAAaC,SAAb,CAAuB,CAAvB,CAAyB,CAAzB,CAD3C,cAC2ER,OAAO,CAACO,IAAR,CAAaC,SAAb,CAAuB,EAAvB,CAA0B,EAA1B,CAD3E,mBAC4G,UAAG,SAAS,CAAC,cAAb,EAD5G,GAJJ,cAOI,KAAC,IAAD,CAAM,IAAN,EAAW,EAAE,CAAC,GAAd,2BACeR,OAAO,CAACS,gBADvB,cAPJ,cAUI,MAAC,IAAD,CAAM,IAAN,EAAW,EAAE,CAAC,GAAd,wBAEIT,OAAO,CAACU,QAAR,CAAmB,CAAnB,WACKV,OAAO,CAACU,QADb,qBAEKV,OAAO,CAACU,QAFb,SAFJ,GAVJ,GADJ,EADJ,cAqBI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACI,KAAC,SAAD,wBACI,KAAC,IAAD,CAAM,IAAN,wBACI,MAAC,SAAD,yBACI,KAAC,SAAD,CAAW,IAAX,EAAgB,EAAE,CAAC,IAAnB,CAAyB,SAAS,CAAC,UAAnC,UAEQC,MAAM,CAACX,OAAO,CAACY,UAAR,CAAqBZ,OAAO,CAACa,cAA9B,CAAN,GAAwD,CAAxD,CACE,UADF,CACeF,MAAM,CAACX,OAAO,CAACY,UAAR,CAAqBZ,OAAO,CAACa,cAA9B,CAAN,GAAwD,CAAxD,CACb,eADa,WAEVF,MAAM,CAACX,OAAO,CAACY,UAAR,CAAqBZ,OAAO,CAACa,cAA9B,CAFI,gBAHvB,EADJ,cASI,KAAC,SAAD,CAAW,IAAX,EAAiB,SAAS,CAAC,UAA3B,uBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,MAA9B,CACA,QAAQ,CAAEF,MAAM,CAACX,OAAO,CAACY,UAAR,CAAqBZ,OAAO,CAACa,cAA9B,CAAN,GAAwD,CADlE,CAEA,OAAO,CAAE,yBAAMX,CAAAA,YAAY,CAACF,OAAO,CAACM,WAAT,CAAlB,EAFT,kBADJ,EATJ,GADJ,EADJ,EADJ,EArBJ,GADJ,EADJ,CAiDH,CAvDD,CA0DA,cAAeR,CAAAA,UAAU,CAACC,YAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Card, Container, Row, Col, Button, ListGroup } from \"react-bootstrap\"\r\nimport { withRouter } from 'react-router-dom'; \r\n\r\nconst WorkoutAdmin = ({workout, history}) => {\r\n\r\n    const handleSignUp = (name) => {\r\n        history.push(`/workouts/update/${workout._id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h1\">\r\n                            <strong>{workout.description}</strong>\r\n                        </Card.Title>\r\n                        <Card.Text as=\"h3\">\r\n                            On {`${workout.date.substring(8,10)}.${workout.date.substring(5,7)}, ${workout.date.substring(11,16)} `}<i className=\"fas fa-clock\"></i>\r\n                        </Card.Text>\r\n                        <Card.Text as=\"p\">\r\n                            {`Price: ${workout.revenuePerClient} shekels`}\r\n                        </Card.Text>\r\n                        <Card.Text as=\"p\">\r\n                            Duration: {\r\n                            workout.duration > 1 \r\n                            ? `${workout.duration} hours` \r\n                            : `${workout.duration} hour` \r\n                            }\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Container>\r\n                        <Card.Body>\r\n                            <ListGroup>\r\n                                <ListGroup.Item as=\"h4\"  className=\"border-0\">\r\n                                    {\r\n                                        Number(workout.maxClients - workout.currentClients) === 0 \r\n                                        ? 'Sold Out' : Number(workout.maxClients - workout.currentClients) === 1 \r\n                                        ? '1 Place left!'\r\n                                        : `${Number(workout.maxClients - workout.currentClients)} Places Left`\r\n                                    }\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item  className=\"border-0\">\r\n                                    <Button type=\"button\" variant=\"dark\" \r\n                                    disabled={Number(workout.maxClients - workout.currentClients) === 0}\r\n                                    onClick={() => handleSignUp(workout.description)}>\r\n                                        Edit\r\n                                    </Button> \r\n                                </ListGroup.Item>\r\n                            </ListGroup>        \r\n                        </Card.Body> \r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(WorkoutAdmin)\r\n"]},"metadata":{},"sourceType":"module"}