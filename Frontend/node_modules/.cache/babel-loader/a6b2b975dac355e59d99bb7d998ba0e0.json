{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reems\\\\Documents\\\\My Web Sites\\\\hotelmanagment\\\\Frontend\\\\src\\\\components\\\\Workout.js\";\nimport React from 'react';\nimport { Card, Container, Row, Col, Button, ListGroup } from \"react-bootstrap\";\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Workout = ({\n  workout,\n  history\n}) => {\n  const handleSignUp = name => {\n    history.push(`/workouts/sign/${workout._id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"my-3 p-3 rounded\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            as: \"h1\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: workout.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            as: \"h3\",\n            children: [\"On \", `${workout.date.substring(8, 10)}.${workout.date.substring(5, 7)}, ${workout.date.substring(11, 16)} `, /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-clock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 133\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            as: \"p\",\n            children: `Price: ${workout.revenuePerClient} shekels`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            as: \"p\",\n            children: [\"Duration: \", workout.duration > 1 ? `${workout.duration} hours` : `${workout.duration} hour`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"h4\",\n                className: \"border-0\",\n                children: Number(workout.maxClients - workout.currentClients) === 0 ? 'Sold Out' : Number(workout.maxClients - workout.currentClients) === 1 ? /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"text-red\",\n                  children: \"1 Place left!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 43\n                }, this) : `${Number(workout.maxClients - workout.currentClients)} Places Left`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"border-0\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"dark\",\n                  disabled: Number(workout.maxClients - workout.currentClients) === 0,\n                  onClick: () => handleSignUp(workout.description),\n                  children: \"Sign up for workout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Workout;\nexport default _c2 = withRouter(Workout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Workout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/components/Workout.js"],"names":["React","Card","Container","Row","Col","Button","ListGroup","withRouter","Workout","workout","history","handleSignUp","name","push","_id","description","date","substring","revenuePerClient","duration","Number","maxClients","currentClients"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Card, Container, Row, Col, Button, ListGroup } from \"react-bootstrap\"\r\nimport { withRouter } from 'react-router-dom'; \r\n\r\nconst Workout = ({workout, history}) => {\r\n\r\n    const handleSignUp = (name) => {\r\n        history.push(`/workouts/sign/${workout._id}`)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h1\">\r\n                            <strong>{workout.description}</strong>\r\n                        </Card.Title>\r\n                        <Card.Text as=\"h3\">\r\n                            On {`${workout.date.substring(8,10)}.${workout.date.substring(5,7)}, ${workout.date.substring(11,16)} `}<i className=\"fas fa-clock\"></i>\r\n                        </Card.Text>\r\n                        <Card.Text as=\"p\">\r\n                            {`Price: ${workout.revenuePerClient} shekels`}\r\n                        </Card.Text>\r\n                        <Card.Text as=\"p\">\r\n                            Duration: {\r\n                            workout.duration > 1 \r\n                            ? `${workout.duration} hours` \r\n                            : `${workout.duration} hour` \r\n                            }\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <Container>\r\n                        <Card.Body>\r\n                            <ListGroup>\r\n                                <ListGroup.Item as=\"h4\"  className=\"border-0\">\r\n                                    {\r\n                                        Number(workout.maxClients - workout.currentClients) === 0 \r\n                                        ? 'Sold Out' : Number(workout.maxClients - workout.currentClients) === 1 \r\n                                        ? <strong className=\"text-red\">1 Place left!</strong>\r\n                                        : `${Number(workout.maxClients - workout.currentClients)} Places Left`\r\n                                    }\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item  className=\"border-0\">\r\n                                    <Button type=\"button\" variant=\"dark\" \r\n                                    disabled={Number(workout.maxClients - workout.currentClients) === 0}\r\n                                    onClick={() => handleSignUp(workout.description)}>\r\n                                        Sign up for workout\r\n                                    </Button> \r\n                                </ListGroup.Item>\r\n                            </ListGroup>        \r\n                        </Card.Body> \r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Workout)\r\n"]},"metadata":{},"sourceType":"module"}