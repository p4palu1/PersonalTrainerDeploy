{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { signForWorkoutReducer, updateWorkoutReducer, workoutCreateReducer, workoutDeleteReducer, workoutListReducer, workoutReducer } from \"./reducers/workoutReducers\";\nimport { adminDetailsReducer, adminLoginReducer, adminUpdateReducer } from \"./reducers/adminReducers\";\nconst reducer = combineReducers({\n  workoutList: workoutListReducer,\n  workoutSingle: workoutReducer,\n  workoutSignFor: signForWorkoutReducer,\n  workoutUpdate: updateWorkoutReducer,\n  workoutCreate: workoutCreateReducer,\n  workoutDelete: workoutDeleteReducer,\n  adminLogin: adminLoginReducer,\n  adminDetails: adminDetailsReducer,\n  adminUpdate: adminUpdateReducer\n});\nconst adminInfoFromStorage = localStorage.getItem('adminInfo') ? JSON.parse(localStorage.getItem('adminInfo')) : null;\nconst workoutsFromStorage = localStorage.getItem('workouts') ? JSON.parse(localStorage.getItem('workouts')) : null;\nconst initialState = {\n  adminLogin: {\n    adminInfo: adminInfoFromStorage\n  },\n  workoutList: {\n    workouts: workoutsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","signForWorkoutReducer","updateWorkoutReducer","workoutCreateReducer","workoutDeleteReducer","workoutListReducer","workoutReducer","adminDetailsReducer","adminLoginReducer","adminUpdateReducer","reducer","workoutList","workoutSingle","workoutSignFor","workoutUpdate","workoutCreate","workoutDelete","adminLogin","adminDetails","adminUpdate","adminInfoFromStorage","localStorage","getItem","JSON","parse","workoutsFromStorage","initialState","adminInfo","workouts","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,EAAsDC,oBAAtD,EAA4EC,oBAA5E,EAAkGC,kBAAlG,EAAsHC,cAAtH,QAA4I,4BAA5I;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,EAAiDC,kBAAjD,QAA2E,0BAA3E;AAIA,MAAMC,OAAO,GAAGb,eAAe,CAAC;AAC5Bc,EAAAA,WAAW,EAAEN,kBADe;AAE5BO,EAAAA,aAAa,EAAEN,cAFa;AAG5BO,EAAAA,cAAc,EAAEZ,qBAHY;AAI5Ba,EAAAA,aAAa,EAAEZ,oBAJa;AAK5Ba,EAAAA,aAAa,EAAEZ,oBALa;AAM5Ba,EAAAA,aAAa,EAAEZ,oBANa;AAO5Ba,EAAAA,UAAU,EAAET,iBAPgB;AAQ5BU,EAAAA,YAAY,EAAEX,mBARc;AAS5BY,EAAAA,WAAW,EAAEV;AATe,CAAD,CAA/B;AAYA,MAAMW,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAChEH,YAAY,CAACC,OAAb,CAAqB,WAArB,CADgE,CAApC,GACS,IADtC;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAC9DH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAD8D,CAAnC,GACS,IADrC;AAGA,MAAMI,YAAY,GAAG;AACjBT,EAAAA,UAAU,EAAE;AAACU,IAAAA,SAAS,EAAEP;AAAZ,GADK;AAEjBT,EAAAA,WAAW,EAAE;AAACiB,IAAAA,QAAQ,EAAEH;AAAX;AAFI,CAArB;AAKA,MAAMI,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AAEA,MAAM+B,KAAK,GAAGlC,WAAW,CACrBc,OADqB,EAErBgB,YAFqB,EAGrB1B,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { signForWorkoutReducer, updateWorkoutReducer, workoutCreateReducer, workoutDeleteReducer, workoutListReducer, workoutReducer } from \"./reducers/workoutReducers\"\r\nimport { adminDetailsReducer, adminLoginReducer, adminUpdateReducer } from \"./reducers/adminReducers\"\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    workoutList: workoutListReducer,\r\n    workoutSingle: workoutReducer,\r\n    workoutSignFor: signForWorkoutReducer,\r\n    workoutUpdate: updateWorkoutReducer,\r\n    workoutCreate: workoutCreateReducer,\r\n    workoutDelete: workoutDeleteReducer,\r\n    adminLogin: adminLoginReducer,\r\n    adminDetails: adminDetailsReducer,\r\n    adminUpdate: adminUpdateReducer,\r\n})\r\n\r\nconst adminInfoFromStorage = localStorage.getItem('adminInfo') ? JSON.parse\r\n(localStorage.getItem('adminInfo')) : null\r\n\r\nconst workoutsFromStorage = localStorage.getItem('workouts') ? JSON.parse\r\n(localStorage.getItem('workouts')) : null\r\n\r\nconst initialState = {\r\n    adminLogin: {adminInfo: adminInfoFromStorage},\r\n    workoutList: {workouts: workoutsFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}