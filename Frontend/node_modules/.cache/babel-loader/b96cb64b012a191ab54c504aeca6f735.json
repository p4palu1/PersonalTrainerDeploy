{"ast":null,"code":"import _slicedToArray from\"C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Container,Card}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Workout from\"../components/Workout\";import{listWorkouts}from'../actions/workoutActions';import Loader from\"../components/Loader\";import Message from\"../components/Message\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var WorkoutsAvalableScreen=function WorkoutsAvalableScreen(_ref){var match=_ref.match;var keyword=match.params.keyword;var dispatch=useDispatch();var workoutList=useSelector(function(state){return state.workoutList;});var loading=workoutList.loading,error=workoutList.error,workouts=workoutList.workouts;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),ws=_useState2[0],setWs=_useState2[1];useEffect(function(){dispatch(listWorkouts(keyword));setWs(workouts.sort(function(w1,w2){return new Date(w1.date)-new Date(w2.date);}));},[dispatch]);return/*#__PURE__*/_jsxs(_Fragment,{children:[loading&&/*#__PURE__*/_jsx(Loader,{}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Container,{className:\"mt-5\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-5\",children:\"All Available Workouts\"}),workouts&&workouts.map(function(workout){return/*#__PURE__*/_jsx(Workout,{workout:workout});})]})]});};export default WorkoutsAvalableScreen;","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/screens/WorkoutsAvailableScreen.js"],"names":["React","useState","useEffect","Container","Card","useDispatch","useSelector","Workout","listWorkouts","Loader","Message","WorkoutsAvalableScreen","match","keyword","params","dispatch","workoutList","state","loading","error","workouts","ws","setWs","sort","w1","w2","Date","date","map","workout"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,IAApB,KAAgC,iBAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,YAAT,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,C,6IAGA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,MAAa,IAAXC,CAAAA,KAAW,MAAXA,KAAW,CAExC,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaD,OAA7B,CACA,GAAME,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAEA,GAAMW,CAAAA,WAAW,CAAGV,WAAW,CAAC,SAACW,KAAD,QAAWA,CAAAA,KAAK,CAACD,WAAjB,EAAD,CAA/B,CACA,GAAQE,CAAAA,OAAR,CAAqCF,WAArC,CAAQE,OAAR,CAAiBC,KAAjB,CAAqCH,WAArC,CAAiBG,KAAjB,CAAwBC,QAAxB,CAAqCJ,WAArC,CAAwBI,QAAxB,CAEA,cAAoBnB,QAAQ,CAAC,EAAD,CAA5B,wCAAOoB,EAAP,eAAWC,KAAX,eAEApB,SAAS,CAAC,UAAM,CACba,QAAQ,CAACP,YAAY,CAACK,OAAD,CAAb,CAAR,CACAS,KAAK,CAACF,QAAQ,CAACG,IAAT,CAAc,SAASC,EAAT,CAAaC,EAAb,CAAgB,CAChC,MAAO,IAAIC,CAAAA,IAAJ,CAASF,EAAE,CAACG,IAAZ,EAAoB,GAAID,CAAAA,IAAJ,CAASD,EAAE,CAACE,IAAZ,CAA3B,CACH,CAFK,CAAD,CAAL,CAGF,CALQ,CAKN,CAACZ,QAAD,CALM,CAAT,CAQA,mBAEQ,2BACCG,OAAO,eAAI,KAAC,MAAD,IADZ,CAECC,KAAK,eAAI,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,KAA3B,EAFV,cAGA,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACI,WAAI,SAAS,CAAC,MAAd,oCADJ,CAEKC,QAAQ,EAAIA,QAAQ,CAACQ,GAAT,CAAa,SAAAC,OAAO,qBAC7B,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EAD6B,EAApB,CAFjB,GAHA,GAFR,CAaa,CA/BjB,CAkCA,cAAelB,CAAAA,sBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Container, Card } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Workout from \"../components/Workout\"\r\nimport { listWorkouts } from '../actions/workoutActions'\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\n\r\n\r\nconst WorkoutsAvalableScreen = ({match}) => {\r\n\r\n    const keyword = match.params.keyword\r\n    const dispatch = useDispatch()\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { loading, error, workouts } = workoutList\r\n    \r\n    const [ws, setWs] = useState([])  \r\n\r\n    useEffect(() => {\r\n       dispatch(listWorkouts(keyword))\r\n       setWs(workouts.sort(function(w1, w2){\r\n           return new Date(w1.date) - new Date(w2.date)\r\n       }))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        (\r\n            <>\r\n            {loading && <Loader />}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            <Container className='mt-5'>\r\n                <h1 className='mb-5'>All Available Workouts</h1>\r\n                {workouts && workouts.map(workout => (\r\n                    <Workout workout={workout} />\r\n                ))}\r\n            </Container>\r\n            </>\r\n    ))\r\n                }\r\n\r\n\r\nexport default WorkoutsAvalableScreen\r\n"]},"metadata":{},"sourceType":"module"}