{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reems\\\\Documents\\\\My Web Sites\\\\hotelmanagment\\\\Frontend\\\\src\\\\screens\\\\WorkoutUpdateScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { updateWorkout } from \"../actions/workoutActions\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkoutUpdateScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const adminLogin = useSelector(state => state.adminLogin);\n  const {\n    adminInfo\n  } = adminLogin;\n  const workoutList = useSelector(state => state.workoutList);\n  const {\n    workouts\n  } = workoutList;\n  const workoutUpdate = useSelector(state => state.workoutUpdate);\n  const {\n    loading,\n    error,\n    success\n  } = workoutUpdate;\n  const workout = workouts.find(w => w._id === match.params.id) || {};\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [duration, setDuration] = useState('');\n  const [equipment, setEquipment] = useState('');\n  const [revenuePerClient, setRevenuePerClient] = useState('');\n  const [currentClients, setCurrentClients] = useState('');\n  const [maxClients, setMaxClients] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    setDescription(workout.description);\n    setDate(workout.date);\n    setDuration(workout.duration);\n    setEquipment(workout.equipment);\n    setRevenuePerClient(workout.revenuePerClient);\n    setCurrentClients(workout.currentClients);\n    setMaxClients(workout.maxClients);\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (maxClients < currentClients) {\n      setMessage(\"max clients shouldn't be smaller than current clients\");\n      alert(message);\n    } else {\n      dispatch(updateWorkout(match.params.id, date, duration, equipment, description, revenuePerClient, currentClients, maxClients));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"Edit Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 26\n    }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"success\",\n      children: \"Successfully updated workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }, this), adminInfo && workout ? /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Description...\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Duration (hours)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Duration...\",\n          value: duration,\n          onChange: e => setDuration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Equipment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter Equipment...\",\n          value: equipment,\n          onChange: e => setEquipment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price for a client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Price...\",\n          value: revenuePerClient,\n          onChange: e => setRevenuePerClient(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Current Amount Of Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Current Clients...\",\n          value: currentClients,\n          onChange: e => setCurrentClients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Max Amount Of Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter Max Clients...\",\n          value: maxClients,\n          onChange: e => setMaxClients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          required: true,\n          children: \"Choose Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: date,\n          minDate: new Date(),\n          dateFormat: \"dd/MM/yyyy\",\n          isClearable: true,\n          scrollableMonthDropdown: true,\n          showTimeSelect: true,\n          dateFormat: \"Pp\",\n          onChange: datePicked => setDate(datePicked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: \"Not logged in as admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WorkoutUpdateScreen, \"L24D3PeG4/9y/WP9+b0FND54jmQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = WorkoutUpdateScreen;\nexport default WorkoutUpdateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutUpdateScreen\");","map":{"version":3,"sources":["C:/Users/reems/Documents/My Web Sites/hotelmanagment/Frontend/src/screens/WorkoutUpdateScreen.js"],"names":["React","useState","useEffect","Row","Col","Form","Button","FormContainer","useDispatch","useSelector","Message","Loader","updateWorkout","DatePicker","WorkoutUpdateScreen","history","match","dispatch","adminLogin","state","adminInfo","workoutList","workouts","workoutUpdate","loading","error","success","workout","find","w","_id","params","id","description","setDescription","date","setDate","duration","setDuration","equipment","setEquipment","revenuePerClient","setRevenuePerClient","currentClients","setCurrentClients","maxClients","setMaxClients","message","setMessage","submitHandler","e","preventDefault","alert","target","value","Date","datePicked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { updateWorkout } from \"../actions/workoutActions\"\r\nimport DatePicker from \"react-datepicker\"\r\n\r\n\r\nconst WorkoutUpdateScreen = ({history, match}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const adminLogin = useSelector((state) => state.adminLogin)\r\n    const { adminInfo } = adminLogin\r\n\r\n    const workoutList = useSelector((state) => state.workoutList)\r\n    const { workouts } = workoutList\r\n\r\n    const workoutUpdate = useSelector((state) => state.workoutUpdate)\r\n    const { loading, error, success } = workoutUpdate\r\n\r\n    const workout = workouts.find(w => w._id === match.params.id) || {}\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [duration, setDuration] = useState('')\r\n    const [equipment, setEquipment] = useState('')\r\n    const [revenuePerClient, setRevenuePerClient] = useState('')\r\n    const [currentClients, setCurrentClients] = useState('')\r\n    const [maxClients, setMaxClients] = useState('')\r\n\r\n\r\n    const [message, setMessage] = useState('')\r\n    \r\n    useEffect(() => {\r\n            setDescription(workout.description)\r\n            setDate(workout.date)\r\n            setDuration(workout.duration)\r\n            setEquipment(workout.equipment)\r\n            setRevenuePerClient(workout.revenuePerClient)\r\n            setCurrentClients(workout.currentClients)\r\n            setMaxClients(workout.maxClients) \r\n    }, [])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(maxClients < currentClients){\r\n            setMessage(\"max clients shouldn't be smaller than current clients\")\r\n            alert(message)\r\n        } else {\r\n            dispatch(updateWorkout(\r\n                match.params.id,\r\n                date, \r\n                duration,\r\n                equipment, \r\n                description, \r\n                revenuePerClient, \r\n                currentClients,\r\n                maxClients,\r\n            ))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className=\"mt-5\">Edit Workout</h1>\r\n            { error && <Message variant=\"danger\">{error}</Message>}\r\n            { loading && <Loader /> }\r\n            { success && <Message variant=\"success\">Successfully updated workout</Message>}\r\n            { /*success && <Message variant=\"success\">Signed up for workout</Message>*/}\r\n            { adminInfo && workout ? \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Description...\" value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Duration (hours)</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Duration...\" value={duration} \r\n                        onChange={(e) => setDuration(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Equipment</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Equipment...\" value={equipment} \r\n                        onChange={(e) => setEquipment(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Price for a client</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Price...\" value={revenuePerClient} \r\n                        onChange={(e) => setRevenuePerClient(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Current Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Current Clients...\" value={currentClients} \r\n                        onChange={(e) => setCurrentClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Max Amount Of Clients</Form.Label>\r\n                        <Form.Control required type=\"number\" placeholder=\"Enter Max Clients...\" value={maxClients} \r\n                        onChange={(e) => setMaxClients(e.target.value)} >  \r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label required >Choose Date</Form.Label>\r\n                    <DatePicker\r\n                    selected={date}\r\n                    minDate={new Date()} \r\n                    dateFormat=\"dd/MM/yyyy\" \r\n                    isClearable\r\n                    scrollableMonthDropdown \r\n                    showTimeSelect\r\n                    dateFormat=\"Pp\"\r\n                    onChange={datePicked => setDate(datePicked)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                        Update \r\n                </Button>\r\n            </Form> \r\n            : <Message variant=\"danger\">Not logged in as admin</Message> \r\n            }\r\n            \r\n        </FormContainer>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default WorkoutUpdateScreen\r\n"]},"metadata":{},"sourceType":"module"}